apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${BACKEND_NAME}-deployment
  namespace: ${BACKEND_NAME}-namespace
  labels:
    app: ${BACKEND_NAME}-container
    version: "v1.0.0"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ${BACKEND_NAME}-container
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  minReadySeconds: 10
  revisionHistoryLimit: 3
  template:
    metadata:
      labels:
        app: ${BACKEND_NAME}-container
        version: "v1.0.0"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "3000"
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app: ${BACKEND_NAME}-container
              topologyKey: "kubernetes.io/hostname"
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      tolerations:
        - key: "node.kubernetes.io/not-ready"
          operator: "Exists"
          effect: "NoExecute"
        - key: "node.kubernetes.io/unreachable"
          operator: "Exists"
          effect: "NoExecute"
      containers:
        - name: ${BACKEND_NAME}-container
          image: ${IMAGE_REGISTRY}/${BACKEND_NAME}:${SHORT_SHA}
          ports:
            - containerPort: 3000
              name: http
              protocol: TCP
          envFrom:
            - secretRef:
                name: ${BACKEND_NAME}-secrets
          resources:
            requests:
              cpu: "500m"
              memory: "1Gi"
            limits:
              cpu: "1"
              memory: "2Gi"
          livenessProbe:
            httpGet:
              path: /health/ping
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /health/ping
              port: http
            initialDelaySeconds: 15
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
          startupProbe:
            httpGet:
              path: /health/ping
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 6
          volumeMounts:
            - name: ${BACKEND_NAME}-data
              mountPath: /${BACKEND_NAME}/data
      volumes:
        - name: ${BACKEND_NAME}-data
          emptyDir: {}
      terminationGracePeriodSeconds: 30
  replicas: 2
  minReadySeconds: 10
  revisionHistoryLimit: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  autoscaling:
    enabled: true
    minReplicas: 1
    maxReplicas: 5
    targetCPUUtilizationPercentage: 70
    targetMemoryUtilizationPercentage: 80
